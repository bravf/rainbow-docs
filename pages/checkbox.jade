extends ./_layout

block title
  | Checkbox - Rainbow

block content
  h1| Checkbox 复选框

  div(class="anchor")
    h2(id="概述")

  .anchor
    h3| checkbox

  r-card
    r-tabs(v-model="common.tab")
      r-tab-pane(name="1", label="示例")
        r-checkbox(
          v-model="common.cities",
          label="北京",
          :value="0"
        )
        r-checkbox(
          v-model="common.cities",
          label="上海",
          :value="1"
        )
        r-checkbox(
          v-model="common.cities",
          label="深圳",
          :value="2"
        )

      r-tab-pane(name="2", label="代码")
        pre
          code(class="html")
          textarea.
            <r-checkbox v-model="common.cities" label="北京" :value="0"></r-checkbox>
            <r-checkbox v-model="common.cities" label="上海" :value="1"></r-checkbox>
            <r-checkbox v-model="common.cities" label="深圳" :value="2"></r-checkbox>

            <script>
            exprot default {
              data () {
                return {
                  common: {
                    cities: [],
                  },
                }
              }
            }
            </script>
  
  .anchor
    h3| checkbox-group

  r-card
    r-tabs(v-model="common.tab2")
      r-tab-pane(name="1", label="示例")
        r-checkbox-group(v-model="common.cities")
          r-checkbox(
            label="北京",
            :value="0"
          )
          r-checkbox(
            label="上海",
            :value="1"
          )
          r-checkbox(
            label="深圳",
            :value="2"
          )

      r-tab-pane(name="2", label="代码")
        pre
          code(class="html")
          textarea.
            <r-checkbox-group v-model="common.cities">
              <r-checkbox label="北京" :value="0"></r-checkbox>
              <r-checkbox label="上海" :value="1"></r-checkbox>
              <r-checkbox label="深圳" :value="2"></r-checkbox>
            </r-radio-group>

            <script>
            exprot default {
              data () {
                return {
                  common: {
                    cities: [],
                  },
                }
              }
            }
            </script>
  
  .anchor
    h2| Api
  
  .anchor
    h3| Checkbox props
  
  div(class="r-table r-table-border api")
    table
      thead
        tr
          th
            div| 属性
          th
            div| 说明
          th
            div| 类型
          th
            div| 默认值
      tbody
        //- 
        tr
          td
            div| checked-value
          td
            div| checkbox 是否选中，v-model 占用值，如果和 value 相同或者 === true，如果是数组，则 value 是否在checkedValue中
          td
            div| Sring | Number | Boolean | Array
          td
            div| -

        //- 
        tr
          td
            div| value
          td
            div| checkbox 自身值
          td
            div| Sring | Number | Boolean
          td
            div| -
        
        //- 
        tr
          td
            div| label
          td
            div| checkbox 的文本描述
          td
            div| Sring | Number
          td
            div| -
        
        //- 
        tr
          td
            div| disabled
          td
            div| 是否禁用
          td
            div| Boolean
          td
            div| false
  
  .anchor
    h3| CheckboxGroup props
  
  div(class="r-table r-table-border api")
    table
      thead
        tr
          th
            div| 属性
          th
            div| 说明
          th
            div| 类型
          th
            div| 默认值
      tbody
        //- 
        tr
          td
            div| checked-value
          td
            div| 控制哪个 checkbox 选中，v-model 占用值
          td
            div| Sring | Number | Array
          td
            div| -

block script
  script.
    new Vue({
      el: '#app',
      watch: {
        'common.componentValue' () {
          location.href = this.common.componentValue + '.html'
        }
      },
      data () {
        return {
          common: {
            componentValue: '',
            activeMenu: '3-3',
            tab: '',
            cities: [],
            tab2: ''
          },
        }
      },
      methods: {
        clickIcon () {
          this.common.input1 = ''
        }
      }
    })