extends ./_layout

block title
  | Form - Rainbow

block content
  h1| Form 表单

  div(class="anchor")
    h2(id="概述")

  .anchor
    h3| Form inline

  r-card
    r-tabs(v-model="common.tab")
      r-tab-pane(name="1", label="示例")
        r-form(inline)
          r-form-item(label="用户名")
            r-input()
          r-form-item(label="密码")
            r-input(type="password")
          r-form-item()
            r-button(type="primary")| 确认

      r-tab-pane(name="2", label="代码")
        pre
          code(class="html")
          textarea(v-pre).
            <r-form inline>
              <r-form-item label="用户名">
                <r-input></r-input>
              </r-form-item>
              <r-form-item label="密码">
                <r-input type="password"></r-input>
              </r-form-item>
              <r-form-item>
                <r-button type="primary">确认</r-button>
              </r-form-item>
            </r-form>
  
  .anchor
    h3| Form

  r-card
    r-tabs(v-model="common.tab2")
      r-tab-pane(name="1", label="示例")
        r-form(
          label-width="100",
          :model="formItem",
          :rules="ruleValidate",
          ref="myForm"
        )
          
          r-form-item(
            label="输入框", 
            prop="input",
            required
          )
            
            r-input(
              v-model="formItem.input",
              placeholder="请输入",
              trim
            ) 
          
          r-form-item(label="选择器", prop="select")
            r-select(
              v-model="formItem.select",
              clearable,
            )
              r-select-option(label="北京市", value="0")
              r-select-option(label="上海市", value="1")
              r-select-option(label="深圳市", value="2")

          r-form-item(label="日期控件")
            r-row(align-items="center")
              r-col(span="11")
                r-form-item(prop="date")
                  r-datepicker(v-model="formItem.date", clearable)

              r-col(span="2", style="text-align:center")
                |-

              r-col(span="11")
                r-form-item(prop="time")
                  r-timepicker(v-model="formItem.time", clearable)
          
          r-form-item(label="单选框", prop="radio")
            r-radio-group(v-model="formItem.radio")
              r-radio(label="男", value="male")
              r-radio(label="女", value="remale")
          
          r-form-item(label="多选框", prop="checkbox")
            r-checkbox-group(v-model="formItem.checkbox")
              r-checkbox(label="吃饭", value="吃饭")
              r-checkbox(label="睡觉", value="睡觉")
              r-checkbox(label="跑步", value="跑步")
              r-checkbox(label="看电影", value="看电影")
          
          r-form-item(label="文本域")
            r-input(
              v-model="formItem.textarea",
              type="textarea"
            )
          
          r-form-item(label="异步验证", prop="ajaxValue", required)
            r-input(
              v-model="formItem.ajaxValue",
              placeholder="请输入ajax"
              trim
            )

          r-form-item(
            required,
            v-for="(item, index) in formItem.tels.items",
            :key="index",
            :label="'电话' + (index + 1)",
            :prop="'tels.items[' + index + '].value'",
            :rules="[{validate: required, msg:'不能为空'}]"
          )
            r-row()
              r-col(span="18")
                r-input(
                  v-model="item.value"
                )
              r-col(span="4", offset="1")
                r-button(
                  @click.native="delTel(item)"
                )| 删除
          
          r-form-item(style="margin-left: 100px;")
            r-button(
              type="primary",
              @click.native="addTel"
            )| 添加电话
          

          r-form-item(prop="images", required, label="上传图片")
            r-upload(
              v-model="formItem.images",
              action="//jsonplaceholder.typicode.com/posts/",
              :on-success="onSuccess",
              list-type="image"
            )
              r-button(icon="ios-cloud-upload-outline")| 上传文件

          r-form-item(style="margin-left: 100px;")
            r-button(
              @click.native="reset"
            )| reset
            r-button(
              style="margin-left: 8px",
              type="primary", 
              @click.native="submit")| 提交

      r-tab-pane(name="2", label="代码")
        pre
          code(class="html")
          textarea(v-pre).
            <r-form label-width="100" :model="formItem" :rules="ruleValidate" ref="myForm">
              <r-form-item label="输入框" prop="input" required>
                <r-input v-model="formItem.input" placeholder="请输入" trim> </r-input>
              </r-form-item>
              <r-form-item label="选择器" prop="select">
                <r-select v-model="formItem.select" clearable>
                  <r-select-option label="北京市" value="0"></r-select-option>
                  <r-select-option label="上海市" value="1"></r-select-option>
                  <r-select-option label="深圳市" value="2"></r-select-option>
                </r-select>
              </r-form-item>
              <r-form-item label="日期控件">
                <r-row align-items="center">
                  <r-col span="11">
                    <r-form-item prop="date">
                      <r-datepicker v-model="formItem.date" clearable></r-datepicker>
                    </r-form-item>
                  </r-col>
                  <r-col span="2" style="text-align:center">-</r-col>
                  <r-col span="11">
                    <r-form-item prop="time">
                      <r-timepicker v-model="formItem.time" clearable></r-timepicker>
                    </r-form-item>
                  </r-col>
                </r-row>
              </r-form-item>
              <r-form-item label="单选框" prop="radio">
                <r-radio-group v-model="formItem.radio">
                  <r-radio label="男" value="male"></r-radio>
                  <r-radio label="女" value="remale"></r-radio>
                </r-radio-group>
              </r-form-item>
              <r-form-item label="多选框" prop="checkbox">
                <r-checkbox-group v-model="formItem.checkbox">
                  <r-checkbox label="吃饭" value="吃饭"></r-checkbox>
                  <r-checkbox label="睡觉" value="睡觉"></r-checkbox>
                  <r-checkbox label="跑步" value="跑步"></r-checkbox>
                  <r-checkbox label="看电影" value="看电影"></r-checkbox>
                </r-checkbox-group>
              </r-form-item>
              <r-form-item label="文本域">
                <r-input v-model="formItem.textarea" type="textarea"></r-input>
              </r-form-item>
              <r-form-item label="异步验证" prop="ajaxValue" required>
                <r-input v-model="formItem.ajaxValue" placeholder="请输入ajax" trim></r-input>
              </r-form-item>
              <r-form-item required v-for="(item, index) in formItem.tels.items" :key="index" :label="'电话' + (index + 1)" 
              :prop="'tels.items[' + index + '].value'" :rules="[{validate: required, msg:'不能为空'}]">
                <r-row>
                  <r-col span="18">
                    <r-input v-model="item.value"></r-input>
                  </r-col>
                  <r-col span="4" offset="1">
                    <r-button @click.native="delTel(item)">删除</r-button>
                  </r-col>
                </r-row>
              </r-form-item>
              <r-form-item style="margin-left: 100px;">
                <r-button type="primary" @click.native="addTel">添加电话</r-button>
              </r-form-item>
              <r-form-item prop="images" required label="上传图片">
                <r-upload v-model="formItem.images" action="//jsonplaceholder.typicode.com/posts/" :on-success="onSuccess" list-type="image">
                  <r-button icon="ios-cloud-upload-outline">上传文件</r-button>
                </r-upload>
              </r-form-item>
              <r-form-item style="margin-left: 100px;">
                <r-button @click.native="reset">reset</r-button>
                <r-button style="margin-left: 8px" type="primary" @click.native="submit">提交</r-button>
              </r-form-item>
            </r-form>

            <script>
            exprot default {
              data () {
                return {
                  formItem: {
                  input: '',
                  select: '',
                  radio: '',
                  checkbox: [],
                  switch: true,
                  date: '',
                  time: '',
                  textarea: '',
                  tels: {
                    items: [{value:''}]
                  },
                  ajaxValue: '',
                  images: [],
                },
                ruleValidate: {
                  input: [
                    {
                      validate: this.required,
                      msg: '输入不能为空'
                    },
                    {
                      validate: function (value, callback){
                        if (/^\d+$/.test(value)){
                          callback(true)
                        }
                        else {
                          callback(false, '请输入数字')
                        }
                      }
                    }
                  ],
                  select: [
                    {
                      validate: this.required,
                      msg: '选择不能为空'
                    }
                  ],
                  radio: [
                    {
                      validate: this.required,
                      msg: 'radio不能为空'
                    }
                  ],
                  checkbox: [
                    {
                      validate: this.required,
                      msg: 'checkbox不能为空'
                    }
                  ],
                  date: [
                    {
                      validate: this.required,
                      msg: 'date不能为空'
                    }
                  ],
                  time: [
                    {
                      validate: this.required,
                      msg: 'time不能为空',
                    }
                  ],
                  ajaxValue: [
                    {
                      validate (value, callback) {
                        if (value.trim().length === 0){
                          callback(false, '不能为空')
                          return
                        }

                        setTimeout(_=>{
                          if (value == 'ajax'){
                            callback(true)
                          }
                          else {
                            callback(false)
                          }
                        }, 1000)
                      },
                      msg: '远程验证失败',
                      loadingMsg: '请求ing....',
                    }
                  ],
                  images: [
                    {
                      validate: this.required,
                      msg: '图片不能为空'
                    }
                  ]
                }
              }，
              methods: {
                required (value, callback) {
                  if (value instanceof Array){
                    if (value.length > 0){
                      callback(true)
                    }
                    else {
                      callback(false)
                    }
                  }
                  else {
                    if (value.length > 0){
                      callback(true)
                    }
                    else {
                      callback(false)
                    }
                  }
                },

                addTel () {
                  this.formItem.tels.items.push({
                    value: ''
                  })
                },

                delTel (item) {
                  var idx = this.formItem.tels.items.indexOf(item)
                  this.formItem.tels.items.splice(idx, 1)
                },

                submit () {
                  console.log(JSON.stringify(this.formItem))
                  this.$refs.myForm.validate(_=>{
                    console.log(_)
                  })
                },

                reset () {
                  this.$refs.myForm.reset()
                },

                onSuccess (res, file) {
                  this.formItem.images.push({
                    name: file.name,
                    url: res.id
                  })
                }
              }
            }
            </script>
  
  .anchor
    h2| Api
  
  .anchor
    h3| Form props
  
  div(class="r-table r-table-border api")
    table
      thead
        tr
          th
            div| 属性
          th
            div| 说明
          th
            div| 类型
          th
            div| 默认值
      tbody
        //- 
        tr
          td
            div| label-width
          td
            div| 标签宽度，所有 Form-item 都会继承此值 
          td
            div| Number | String
          td
            div| 80
        
        //- 
        tr
          td
            div| inline
          td
            div| 是否开启行内表单模式
          td
            div| Boolean
          td
            div| false
        
        //- 
        tr
          td
            div| model
          td
            div| 表单数据对象
          td
            div| Object
          td
            div| -
        
        //- 
        tr
          td
            div| rules
          td
            div| 表单验证规则
          td
            div| Object
          td
            div| -
  
  .anchor
    h3| Form methods
  
  div(class="r-table r-table-border api")
    table
      thead
        tr
          th
            div| 方法名
          th
            div| 说明
          th
            div| 参数

      tbody
        //- 
        tr
          td
            div| validate
          td
            div| 对表单进行校验，参数为校验完的回调，回调里 true 表示成功， false 表示失败
          td
            div| callback
        
        //- 
        tr
          td
            div| reset
          td
            div| 对表单进行重置，复原所有字段值，并清空校验结果
          td
            div| 无
        
  .anchor
    h3| FormItem props
  
  div(class="r-table r-table-border api")
    table
      thead
        tr
          th
            div| 属性
          th
            div| 说明
          th
            div| 类型
          th
            div| 默认值
      tbody
        //- 
        tr
          td
            div| label
          td
            div| 标签文本
          td
            div| Sring
          td
            div| -
        
        //- 
        tr
          td
            div| prop
          td
            div| 表单域 model 里的字段， 支持多级模式，比如 a.b.c
          td
            div| String
          td
            div| -
        
        //- 
        tr
          td
            div| rules
          td
            div| 表单验证规则
          td
            div| Array
          td
            div| -

        //- 
        tr
          td
            div| required
          td
            div| 是否必填，设置后会在 lable 前增加红色*
          td
            div| Boolean
          td
            div| false
  
  .anchor
    h3| FormItem methods
  
  div(class="r-table r-table-border api")
    table
      thead
        tr
          th
            div| 方法名
          th
            div| 说明
          th
            div| 参数

      tbody
        //- 
        tr
          td
            div| validate
          td
            div| 对表单进行校验，参数为校验完的回调，回调里 true 表示成功， false 表示失败
          td
            div| callback

block script
  script.
    var cities = []
    for (var i=0; i<12; i++){
      cities.push({
        value: i,
        label: '北京' + i,
      })
    }

    vm = new Vue({
      el: '#app',
      watch: {
        'common.componentValue' () {
          location.href = this.common.componentValue + '.html'
        }
      },
      data () {
        return {
          common: {
            componentValue: '',
            activeMenu: '3-9',
            tab: '',
            tab2: ''
          },
          formItem: {
            input: '',
            select: '',
            radio: '',
            checkbox: [],
            switch: true,
            date: '',
            time: '',
            textarea: '',
            tels: {
              items: [{value:''}]
            },
            ajaxValue: '',
            images: [],
          },
          ruleValidate: {
            input: [
              {
                validate: this.required,
                msg: '输入不能为空'
              },
              {
                validate: function (value, callback){
                  if (/^\d+$/.test(value)){
                    callback(true)
                  }
                  else {
                    callback(false, '请输入数字')
                  }
                }
              }
            ],
            select: [
              {
                validate: this.required,
                msg: '选择不能为空'
              }
            ],
            radio: [
              {
                validate: this.required,
                msg: 'radio不能为空'
              }
            ],
            checkbox: [
              {
                validate: this.required,
                msg: 'checkbox不能为空'
              }
            ],
            date: [
              {
                validate: this.required,
                msg: 'date不能为空'
              }
            ],
            time: [
              {
                validate: this.required,
                msg: 'time不能为空',
              }
            ],
            ajaxValue: [
              {
                validate (value, callback) {
                  if (value.trim().length === 0){
                    callback(false, '不能为空')
                    return
                  }

                  setTimeout(_=>{
                    if (value == 'ajax'){
                      callback(true)
                    }
                    else {
                      callback(false)
                    }
                  }, 1000)
                },
                msg: '远程验证失败',
                loadingMsg: '请求ing....',
              }
            ],
            images: [
              {
                validate: this.required,
                msg: '图片不能为空'
              }
            ]
          }
        }
      },
      methods: {
        required (value, callback) {
          if (value instanceof Array){
            if (value.length > 0){
              callback(true)
            }
            else {
              callback(false)
            }
          }
          else {
            if (value.length > 0){
              callback(true)
            }
            else {
              callback(false)
            }
          }
          
        },

        addTel () {
          this.formItem.tels.items.push({
            value: ''
          })
        },

        delTel (item) {
          var idx = this.formItem.tels.items.indexOf(item)
          this.formItem.tels.items.splice(idx, 1)
        },

        submit () {
          console.log(JSON.stringify(this.formItem))
          this.$refs.myForm.validate(_=>{
            console.log(_)
          })
        },

        reset () {
          this.$refs.myForm.reset()
        },

        onSuccess (res, file) {
          this.formItem.images.push({
            name: file.name,
            url: res.id
          })
        }
      }
    })